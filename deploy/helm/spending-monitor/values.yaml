# Default values for spending-monitor
global:
  imageRegistry: quay.io
  imageRepository: rh-ai-quickstart
  imageTag: latest
  imagePullPolicy: IfNotPresent
  storageClass: ""

# Secrets configuration - these values should be overridden with actual secrets
secrets:
  # Database secrets
  POSTGRES_DB: "spending-monitor"
  POSTGRES_USER: "user"
  POSTGRES_PASSWORD: "changeme"

  # API secrets
  DATABASE_URL: "postgresql+asyncpg://user:changeme@spending-monitor-db:5432/spending-monitor"
  API_KEY: "changeme"
  BASE_URL: "http://localhost:8000"
  LLM_PROVIDER: "openai"
  MODEL: "llama-3-3-70b-instruct-w8a8"
  ENVIRONMENT: "production"
  DEBUG: "false"
  BYPASS_AUTH: "false"
  CORS_ALLOWED_ORIGINS: '["*"]'
  ALLOWED_ORIGINS: '["*"]'
  SMTP_HOST: "changeme"
  SMTP_PORT: "587"
  SMTP_FROM_EMAIL: "changeme"
  SMTP_USE_TLS: "true"
  SMTP_USE_SSL: "false"
  KEYCLOAK_URL: "changeme"
  KEYCLOAK_REALM: "changeme"
  KEYCLOAK_CLIENT_ID: "changeme"

  # UI secrets
  VITE_API_BASE_URL: "http://localhost:8000"

# Database configuration
database:
  enabled: true
  name: spending-monitor-db
  image:
    repository: pgvector/pgvector
    tag: pg16
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    size: 10Gi
    accessMode: ReadWriteOnce
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Database migration configuration
migration:
  enabled: true
  name: spending-monitor-migration
  image:
    repository: spending-monitor-db
    tag: latest
  restartPolicy: Never
  backoffLimit: 3
  ttlSecondsAfterFinished: 86400  # 24 hours
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# API configuration
api:
  enabled: true
  name: spending-monitor-api
  image:
    repository: spending-monitor-api
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  healthCheck:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10

# UI configuration
ui:
  enabled: true
  name: spending-monitor-ui
  image:
    repository: spending-monitor-ui
    tag: latest
  service:
    type: ClusterIP
    port: 8080
  replicas: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  healthCheck:
    enabled: true
    path: /
    initialDelaySeconds: 10
    periodSeconds: 10

# Nginx reverse proxy configuration
nginx:
  enabled: true
  name: spending-monitor-nginx
  image:
    repository: nginx
    tag: "1.25-alpine"
  service:
    type: ClusterIP
    port: 8080
  replicas: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  healthCheck:
    enabled: true
    path: /health
    initialDelaySeconds: 5
    periodSeconds: 10

# Keycloak Operator configuration
# 
# ⚠️  PREREQUISITE: Keycloak Operator must be installed by cluster admin BEFORE deploying
# 
# Installation:
#   OpenShift: Operators → OperatorHub → Search "Keycloak"
#   CLI: See deploy/KEYCLOAK_OPERATOR.md
#
# The Helm chart includes a pre-flight check that will FAIL if operator is not installed.
# This is intentional to ensure proper setup.
#
keycloak:
  enabled: false  # Disabled by default, enable in prod-keycloak values
  name: spending-monitor-keycloak
  image:
    repository: ""  # Leave empty to use operator default image
    tag: "latest"
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  route:
    enabled: true  # Operator will create OpenShift route automatically
  realm:
    create: true  # Create realm via KeycloakRealmImport CR
    name: "spending-monitor"
    clientId: "spending-monitor"

# OpenShift Routes configuration (preferred over Ingress)
routes:
  enabled: true
  annotations: {}
  # nginx route configuration (when nginx.enabled=true)
  nginx:
    host: ""  # Leave empty to auto-generate hostname, or specify custom hostname
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
  # Legacy routes configuration (when nginx.enabled=false)
  ui:
    host: ""  # Leave empty to auto-generate hostname, or specify custom hostname
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
  api:
    host: ""  # Leave empty to auto-generate hostname, or specify custom hostname
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

# ServiceAccount
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Security Context
podSecurityContext: {}

# Security Context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}